name: Fluid Volumetric Data Processing and Commit

on:
  push:
    branches:
      - "**"  # Triggers on any branch push
  workflow_dispatch: # Allows manual trigger

jobs:
  process_fluid_volumetric_data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Debug Repository Structure
        run: ls -R "$GITHUB_WORKSPACE"

      - name: Verify Volumetric Data Processing Script Exists
        run: |
          echo "üîé Checking if generate_vdb_format.py exists..."
          ls -R "$GITHUB_WORKSPACE/src"
          if [ ! -f "$GITHUB_WORKSPACE/src/generate_vdb_format.py" ]; then
            echo "‚ùå Error: generate_vdb_format.py not found in src directory!"
            exit 1
          else
            echo "‚úÖ Script found: generate_vdb_format.py"
          fi

      - name: Delete All Previous Files in Testing-Input-Output
        run: |
          if [ -d "$GITHUB_WORKSPACE/data/testing-input-output/" ]; then
            rm -rf "$GITHUB_WORKSPACE/data/testing-input-output/*"
            echo "üóëÔ∏è Deleted all files inside data/testing-input-output/."
          else
            echo "‚ÑπÔ∏è No previous files found in data/testing-input-output/‚Äîproceeding with new generation."
          fi

      - name: Make `download_from_dropbox.sh` Executable
        run: chmod +x src/download_from_dropbox.sh

      - name: Download Simulation Files from Dropbox
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        run: src/download_from_dropbox.sh

      - name: Run Fluid Volumetric Data Processing Script
        run: python src/generate_vdb_format.py

      - name: Debug Output Directory
        run: ls -R "$GITHUB_WORKSPACE/data/testing-input-output"

      - name: Run Unit Tests
        run: PYTHONPATH=src pytest tests --verbose

      - name: Make `upload_to_dropbox.sh` Executable
        run: chmod +x src/upload_to_dropbox.sh

      - name: Debug Before Dropbox Upload
        run: |
          echo "üîç Checking directory structure before upload..."
          ls -R $GITHUB_WORKSPACE

      - name: Upload Fluid Simulation Input to Dropbox
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        run: src/upload_to_dropbox.sh



